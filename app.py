# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zmVQXUGRWfOs_iVYKuwqVfySLdsy9Eao
"""

# app.py

import streamlit as st
import torch
import numpy as np
import matplotlib.pyplot as plt
from torchvision.utils import make_grid
from generator_model import Generator

# Load model
@st.cache_resource
def load_model():
    model = Generator()
    model.load_state_dict(torch.load("generator.pth", map_location="cpu"))
    model.eval()
    return model

def generate_images(generator, digit, num_samples=5):
    noise = torch.randn(num_samples, 100)
    labels = torch.tensor([digit] * num_samples)
    with torch.no_grad():
        imgs = generator(noise, labels).view(-1, 1, 28, 28)
        imgs = (imgs + 1) / 2.0  # scale from [-1,1] to [0,1]
    return imgs

# Streamlit UI
st.title("ðŸ§  Handwritten Digit Generator")
st.markdown("Select a digit (0â€“9), and I'll generate 5 handwritten versions using my trained neural net!")

digit = st.selectbox("Choose a digit to generate:", list(range(10)))

if st.button("Generate"):
    st.write(f"Here are 5 generated images of digit **{digit}**:")
    generator = load_model()
    images = generate_images(generator, digit)

    # Display 5 images side by side
    fig, ax = plt.subplots(1, 5, figsize=(12, 3))
    for i in range(5):
        ax[i].imshow(images[i][0], cmap='gray')
        ax[i].axis('off')
    st.pyplot(fig)